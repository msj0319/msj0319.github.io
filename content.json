{"pages":[{"title":"about","text":"안녕하세요 개발자를 꿈꾸고 있는 문도니입니다.그동안 배워 오고 공부해온 것들을 정리 해야겠다는 생각이 들었어요. 컴퓨터를 전공한 학생들은 과제나 학업을 위해 블로그를 뒤적거리고, 개발자들은 앞에 놓인 문제에 빠르게 대응하기 위해 잘 정리 되어진 블로그를 찾기 마련입니다.길을 잃은 IT인들의 길잡이가 되고 저 또한 제가 닦아 놓은 길을 다시 되돌아 볼 수 있는 곳. 저도 그런 블로그를 만들고 싶어졌어요.학부 4학년을 바라보는 이 시점에서 제가 배운 것은 얼마나 많고, 제 머릿속에서 꺼내 쓸 수 있는 지식들은 얼마나 될지 기록해보고 싶어졌습니다. Career 라온시큐어 인턴 - QA Tester (2019/07 ~ 2020/01) : 전반적인 IT 회사에서의 개발 프로세스 경험.","link":"/about/index.html"}],"posts":[{"title":"[프로그래머스] 나머지 한 점","text":"직사각형을 만드는데 필요한 4개의 점 중 3개만 주어질 때, 주어지는 3개의 점들은 모두 각 x축 y축에 평행 하도록 하는 좌표만 주므로, 만약 [[1,4],[3,4],[3,10]] 이 주어졌을 때 중복 되는 배열의 원소 수는 소거한다. 그럼 중복 되지 않는 수가 나머지 한 점 이 된다.그러므로 [1,10] 이 output으로 나와야 한다. 주어진 2차원 배열을 비정방형 행렬도 생각하여 풀어보자. 1234 x좌표 y좌표v = [[1, 4] [0][0] [0][1] [3, 4] == [1][0] [1][1] [3,10]] [2][0] [2][1] 1234567891011121314151617181920212223242526272829class Solution { public int[] solution(int[][] v) { int x, y; // x좌표값 찾기 if (v[0][0]==v[1][0]){ x = v[2][0]; } else if (v[0][0]==v[2][0]){ x = v[1][0]; } else x = v[0][0]; //y좌표값 찾기 if(v[0][1] == v[1][1]){ y = v[2][1]; } else if(v[0][1]==v[2][1]){ y = v[1][1]; } else y = v[0][1]; int[] answer = {x,y}; return answer; }} XOR 연산자 사용하여 문제해결 12345678910111213class Solution { public int[] solution(int[][] v) { int[] answer = {0,0}; //좌표는 총 3개가 입력으로 주어지므로 반복을 3번 돌린다. for (int i=0; i&lt;3; i++){ answer[0] ^= v[i][0]; answer[1] ^= v[i][1]; } return answer; }}","link":"/2020/01/22/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%82%98%EB%A8%B8%EC%A7%80-%ED%95%9C-%EC%A0%90/"},{"title":"[프로그래머스] 순열 검사","text":"123456789101112131415import java.util.Arrays;class Solution { public boolean solution(int[] arr) { boolean answer = true; Arrays.sort(arr); for (int i=0; i&lt;arr.length; i++){ if(arr[i]!=i+1){ answer = false; break; } } return answer; }}","link":"/2020/01/22/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%88%9C%EC%97%B4-%EA%B2%80%EC%82%AC/"},{"title":"1-1. 문제해결과 프로그래밍 대회","text":"몸에 익혀야 할 만큼 의미있었던 구문들 지식을 진정 자신의 것으로 만들어 활용하기 위해선 학문이 발전하는 과정에서 일어난 발견, 깨달음을 학생 자신이 되짚어 갈 수 있어야 한다. 알고리즘에 사용된 원칙들을 이해하고 변형해야 풀 수 있는 문제가 출제된다. 프로그래밍은 문제해결이다.프로그래밍 언어의 특성, 동작할 하드웨어와 운영체제에 관한 지식, 사용하고 있는 라이브러리들에 대한 유의 사항들이 회오리 치고 있다. 나는 어떻게 알고리즘 테스트를 준비할까.여러 문제를 풀어보는 것? 아니면 하나의 언어를 깊게 파보는 것이 중요할까?여러 기업들이 보고자 하는 문제해결 능력은 어떤 것일까?문제가 요구하는 Memory 기준과 Overflow에 대해 신경쓰고 Runtime(시간복잡도)에 알맞는 코드가 나올 수 있는지 여러 예제를 통해 공부하고 또 고민해봐야겠다.","link":"/2020/01/09/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%20%EB%AC%B8%EC%A0%9C%20%ED%95%B4%EA%B2%B0%20%EC%A0%84%EB%9E%B5_1-1_%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0%EA%B3%BC%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%20%EB%8C%80%ED%9A%8C/"},{"title":"[프로그래머스] 자릿 수 더하기","text":"123456789101112import java.util.*;public class Solution { public int solution(int n) { int answer = 0; while (n!=0) { answer += n % 10; n /= 10; } return answer; }}","link":"/2020/01/22/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%9E%90%EB%A6%BF-%EC%88%98-%EB%8D%94%ED%95%98%EA%B8%B0/"}],"tags":[{"name":"프로그래머스","slug":"프로그래머스","link":"/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"},{"name":"알고리즘","slug":"알고리즘","link":"/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"},{"name":"Algorithm","slug":"Algorithm","link":"/tags/Algorithm/"},{"name":"문제해결","slug":"문제해결","link":"/tags/%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0/"}],"categories":[{"name":"Algorithm","slug":"Algorithm","link":"/categories/Algorithm/"},{"name":"Programmers","slug":"Algorithm/Programmers","link":"/categories/Algorithm/Programmers/"},{"name":"알고리즘 문제해결 전략","slug":"Algorithm/알고리즘-문제해결-전략","link":"/categories/Algorithm/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0-%EC%A0%84%EB%9E%B5/"}]}